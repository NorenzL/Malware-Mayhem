using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class spawner : MonoBehaviour
{
    // Start is called before the first frame update
    [SerializeField]
    private GameObject[] enemyPrefabs;
    
    [SerializeField]
    public int numberOfEnemy = 0;
    Animator virusAnimator;
    public timerBoss timerBoss;

    private List<MonoBehaviour> enabledEnemyScripts = new List<MonoBehaviour>();
    void Start()
    {
        virusAnimator = enemyPrefabs[0].GetComponent<Animator>();
        virusAnimator.SetBool("On", true);
        StartCoroutine(spawnEnemy());
        
    }

    // Update is called once per frame
    private IEnumerator spawnEnemy()
    {
        while (true)
        {
            while (numberOfEnemy < 5 && timerBoss.remainingTime != 0)
            {
                yield return new WaitForSeconds(0);
                GameObject randomEnemyPrefab = enemyPrefabs[Random.Range(0, enemyPrefabs.Length)];
                GameObject newEnemy;
                if (randomEnemyPrefab == enemyPrefabs[12]) // if spawned enemy is MITM
                {
                    newEnemy = Instantiate(randomEnemyPrefab, new Vector3(Random.Range(-8.11f, 8.05f), Random.Range(-4.94f, -0.43f), 0), Quaternion.identity);
                }

                else
                {
                    newEnemy = Instantiate(randomEnemyPrefab, new Vector3(Random.Range(9f, 15f), Random.Range(-1f, -4f), 0), Quaternion.identity);
                }
                
                EnableEnemyScript(newEnemy);
                numberOfEnemy++;
              

            }


            yield return new WaitUntil(() => numberOfEnemy <= 2);
            
        }

    }

    private void EnableEnemyScript(GameObject enemy)
    {
        
        virusLastLevel virusLastLevel = enemy.GetComponent<virusLastLevel>();
        sqliLastLevel sqliLastLevel = enemy.GetComponent<sqliLastLevel>();
        rootkitSummonLastLevel rootkitSummonLastLevel = enemy.GetComponent<rootkitSummonLastLevel>();
        spywareLastLevel spywareLastLevel = enemy.GetComponent<spywareLastLevel>();
        ransomwareLastLevel ransomwareLastLevel = enemy.GetComponent<ransomwareLastLevel>();
        phishingMeleeLastLevel phishingMeleeLastLevel = enemy.GetComponent<phishingMeleeLastLevel>();
        phishingRangeLastLevel phishingRangeLastLevel = enemy.GetComponent<phishingRangeLastLevel>();
        phishingMageLastLevel phishingMageLastLevel = enemy.GetComponent<phishingMageLastLevel>();
        dosLastLevel dosLastLevel = enemy.GetComponent<dosLastLevel>();
        iotRefLastLevel iotRefLastLevel = enemy.GetComponent<iotRefLastLevel>();
        iotTvLastLevel iotTvLastLevel = enemy.GetComponent<iotTvLastLevel>();
        iotCCTvLastLevel iotCCTvLastLevel = enemy.GetComponent<iotCCTvLastLevel>();
        mitmLastLevel mitmLastLevel = enemy.GetComponent<mitmLastLevel>();

        if (virusLastLevel != null)
        {
            virusLastLevel.enabled = true;
            virusAnimator = enemy.GetComponent<Animator>();
            virusAnimator.SetBool("On", true);
            enabledEnemyScripts.Add(virusLastLevel);
        }
        
        else if (sqliLastLevel != null)
        {
            sqliLastLevel.enabled = true;
            enabledEnemyScripts.Add(sqliLastLevel);
        }

        else if (rootkitSummonLastLevel != null)
        {
            rootkitSummonLastLevel.enabled = true;
            enabledEnemyScripts.Add(rootkitSummonLastLevel);
        }

        else if (spywareLastLevel != null)
        {
            spywareLastLevel.enabled = true;
            enabledEnemyScripts.Add(spywareLastLevel);
        }

        else if (ransomwareLastLevel != null)
        {
            ransomwareLastLevel.enabled = true;
            enabledEnemyScripts.Add(ransomwareLastLevel);
        }
        
        else if (phishingMeleeLastLevel != null)
        {
            phishingMeleeLastLevel.enabled = true;
            enabledEnemyScripts.Add(phishingMeleeLastLevel);
        }

        else if (phishingRangeLastLevel != null)
        {
            phishingRangeLastLevel.enabled = true;
            enabledEnemyScripts.Add(phishingRangeLastLevel);
        }
        
        else if (phishingMageLastLevel != null)
        {
            phishingMageLastLevel.enabled = true;
            enabledEnemyScripts.Add(phishingMageLastLevel);
        }

        else if (dosLastLevel != null)
        {
            dosLastLevel.enabled = true;
            enabledEnemyScripts.Add(dosLastLevel);
        }

        else if (iotRefLastLevel != null)
        {
            iotRefLastLevel.enabled = true;
            enabledEnemyScripts.Add(iotRefLastLevel);
        }

        else if (iotTvLastLevel != null)
        {
            iotTvLastLevel.enabled = true;
            enabledEnemyScripts.Add(iotTvLastLevel);
        }

        else if (iotCCTvLastLevel != null)
        {
            iotCCTvLastLevel.enabled = true;
            enabledEnemyScripts.Add(iotCCTvLastLevel);
        }

        else if (mitmLastLevel != null)
        {
            mitmLastLevel.enabled = true;
            enabledEnemyScripts.Add(mitmLastLevel);
        }
    }

    public void DestroyAllEnemies()
    {
        
        foreach (MonoBehaviour enemyScript in enabledEnemyScripts)
        {
            
            if (enemyScript is virusLastLevel)
            {
                virusLastLevel virusScript = (virusLastLevel)enemyScript;
                virusScript.health = 0;
                virusScript.onHitDone();
                
            }
            else if (enemyScript is sqliLastLevel)
            {
                sqliLastLevel sqliScript = (sqliLastLevel)enemyScript;
                sqliScript.health = 0;
                sqliScript.onHitDone();

            }
            else if (enemyScript is rootkitSummonLastLevel)
            {
                rootkitSummonLastLevel rootKitscript = (rootkitSummonLastLevel)enemyScript;
                rootKitscript.health = 0;
                rootKitscript.onHitDone();
            }
            else if (enemyScript is spywareLastLevel)
            {
                spywareLastLevel spywareScript = (spywareLastLevel)enemyScript;
                spywareScript.health = 0;
                spywareScript.onHitDone();
            }
            else if (enemyScript is ransomwareLastLevel)
            {
                ransomwareLastLevel ransomwareScript = (ransomwareLastLevel)enemyScript;
                ransomwareScript.health = 0;
                ransomwareScript.onHitDone();
            }
            else if (enemyScript is phishingMeleeLastLevel)
            {
                phishingMeleeLastLevel phishingMeleeScript = (phishingMeleeLastLevel)enemyScript;
                phishingMeleeScript.health = 0;
                phishingMeleeScript.onHitDone();
            }
            else if (enemyScript is phishingRangeLastLevel)
            {
                phishingRangeLastLevel phishingRangeScript = (phishingRangeLastLevel)enemyScript;
                phishingRangeScript.health = 0;
                phishingRangeScript.onHitDone();
            }
            else if (enemyScript is phishingMageLastLevel)
            {
                phishingMageLastLevel phishingMageScript = (phishingMageLastLevel)enemyScript;
                phishingMageScript.health = 0;
                phishingMageScript.onHitDone();
            }
            else if (enemyScript is dosLastLevel)
            {
                dosLastLevel dosScript = (dosLastLevel)enemyScript;
                dosScript.health = 0;
                dosScript.onHitDone();
            }
            else if (enemyScript is iotRefLastLevel)
            {
                iotRefLastLevel iotRefScript = (iotRefLastLevel)enemyScript;
                iotRefScript.health = 0;
                iotRefScript.onHitDone();
            }
            else if (enemyScript is iotTvLastLevel)
            {
                iotTvLastLevel iotTvScript = (iotTvLastLevel)enemyScript;
                iotTvScript.health = 0;
                iotTvScript.onHitDone();
            }
            else if (enemyScript is iotCCTvLastLevel)
            {
                iotCCTvLastLevel iotCCTVScript = (iotCCTvLastLevel)enemyScript;
                iotCCTVScript.health = 0;
                iotCCTVScript.onHitDone();
            }
            else if (enemyScript is mitmLastLevel)
            {
                mitmLastLevel mitmScript = (mitmLastLevel)enemyScript;
                mitmScript.health = 0;
                mitmScript.OnHitDone();
            }
            

        }

        enabledEnemyScripts.Clear(); // Clear the list after destroying enemies
        numberOfEnemy = 0;
    }


}
