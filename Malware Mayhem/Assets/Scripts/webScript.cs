using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Networking;
using UnityEngine.SceneManagement;
using MoreMountains.Tools;

public class webScript : MonoBehaviour
{
    public levelSelect levelSelect;
    public GameObject errTxt;
    GameObject testScr;
    public playerDataSo playerDataSo;
    void Awake()
    {
        
        levelSelect = GetComponent<levelSelect>();
        testScr = GameObject.Find("Result/TestScore");
    }

    void Start()
    {
    }

    //Login
    public IEnumerator Login(string credential, string password)
    {
        WWWForm form = new WWWForm();
        form.AddField("loginCred", credential);
        form.AddField("loginPass", password);

        using (UnityWebRequest www = UnityWebRequest.Post("http://localhost/malwaremayhem/Login.php", form))
        {
            yield return www.SendWebRequest();

            if (www.error != null)
            {
                Debug.Log(www.error);
            }
            else
            {
                if (www.downloadHandler.text == "True")
                {
                    StartCoroutine(preTestCheck(credential));
                }
                else
                {
                   Debug.Log(www.downloadHandler.text);
                   errTxt.SetActive(true);
                   errTxt.GetComponentInChildren<Text>().text = www.downloadHandler.text;
                }
            }
        }
    }

    // Function checks if user has already taken the test
    public IEnumerator preTestCheck(string credential)
    {
        WWWForm form = new WWWForm();
        form.AddField("loginCred", credential);

        using (UnityWebRequest www = UnityWebRequest.Post("http://localhost/malwaremayhem/testCheck.php", form))
        {
            yield return www.SendWebRequest();

            if (www.error != null)
            {
                Debug.Log(www.error);
            }
            else
            {
                if (www.downloadHandler.text == "0")
                {
                    preTestLoader();
                }
                else
                {
                    Debug.Log(www.downloadHandler.text);
                    StartCoroutine(load());
                    PlayGame();
                    
                }
            }
        }
    }

    // save feature

    public IEnumerator Save(int level,  int coin, int battery) 
    {
        WWWForm form = new WWWForm();
        form.AddField("currentLevel", level);
        form.AddField("coin", coin);
        form.AddField("battery", battery);

        using (UnityWebRequest www = UnityWebRequest.Post("http://localhost/malwaremayhem/save.php", form)) 
        {
            yield return www.SendWebRequest();

            if (www.error != null)
            {
                Debug.Log(www.error);
            }
           
        }

    }

    public IEnumerator load()
    {
        using (UnityWebRequest www = UnityWebRequest.Get("http://localhost/malwaremayhem/load.php"))
        {
            yield return www.SendWebRequest();

            if (www.error != null)
            {
                Debug.Log(www.error);
            }
            else
            {

                string responseText = www.downloadHandler.text;

                // Split the response text by newlines to separate the values
                string[] values = responseText.Split('\n');

                playerDataSo.levelUnlock = int.Parse(values[0]);
                playerDataSo.coinAmount = int.Parse(values[1]);
                playerDataSo.healCounter = int.Parse(values[2]);
               
            }
        }
    }


    //New User Registation
    public IEnumerator register(string username, string email, string password)
    {
        WWWForm form = new WWWForm();
        form.AddField("username", username);
        form.AddField("email", email);
        form.AddField("password", password);

        using (UnityWebRequest www = UnityWebRequest.Post("http://localhost/malwaremayhem/registerUser.php", form))
        {
            yield return www.SendWebRequest();

            if (www.error != null)
            {
                Debug.Log(www.error);
            }
            else
            {
                if (www.downloadHandler.text == "1")
                {
                    StartCoroutine(load());
                    preTestLoader();
                }
                else
                {
                    Debug.Log(www.downloadHandler.text);
                    errTxt.GetComponent<Text>().text = www.downloadHandler.text;
                }
            }
        }
    }


    public IEnumerator updatePretestScore(int score)
    {
        WWWForm form = new WWWForm();
        form.AddField("score", score);

        using (UnityWebRequest www = UnityWebRequest.Post("http://localhost/malwaremayhem/updatePreTestScore.php", form))
        {

            yield return www.SendWebRequest();

            if (www.error != null)
            {
                Debug.Log(www.error);
            }
            else
            {
                Debug.Log(www.downloadHandler.text);
            }
        }
    }

    public IEnumerator getLevel()
    {
        using (UnityWebRequest www = UnityWebRequest.Get("http://localhost/malwaremayhem/getLevel.php"))
        {
            yield return www.SendWebRequest();

            if (www.error != null)
            {
                Debug.Log(www.error);
            }
            else
            {
                string lvlData = www.downloadHandler.text;
                int level = int.Parse(lvlData);
                //switch (www.downloadHandler.text)
                //{
                //   case "1": 
                //        lvl = 1;
                //        break;
                //    case "2": 
                //        lvl = 2;
                //       break;
                //    case "3": 
                //        lvl = 3;
                //        break;
                //    case "4": 
                //        lvl = 4;
                //        break;
                //    case "5": 
                //        lvl = 5;
                //        break;
                //    case "6": 
                //       lvl = 6;
                //        break;
                //    case "7": 
                //       lvl = 7;
                //        break;
                //    case "8": 
                //        lvl = 8;
                //        break;
                //    case "9": 
                //        lvl = 9;
                //        break;
                //    case "10": 
                //        lvl = 10;
                //        break;
                //}
                //Debug.Log(level);

                //levelSelect.openLvl(level);
            }
        }
    }


    // To Lobby
    public void PlayGame()
    {
        SceneManager.LoadSceneAsync("Lobby");
        
    }

    public void preTestLoader()
    {
        SceneManager.LoadSceneAsync("Pretest");
    }

    public void QuitGame()
    {
        Application.Quit();
    }

}
