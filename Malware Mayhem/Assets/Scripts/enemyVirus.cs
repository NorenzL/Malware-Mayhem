using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using static UnityEngine.RuleTile.TilingRuleOutput;

public class VirusEnemy : enemy
{
    public float speed;
    public float chaseDistance;
    public float stopDistance;
    public GameObject target;
    private float targetDistance;
    Animator animate;

    private Coroutine attackCoroutine;
    void Start()
    {
        animate = GetComponent<Animator>();
    }

    void Update()
    {
        targetDistance = Vector2.Distance(transform.position, target.transform.position);

        if (targetDistance < chaseDistance && targetDistance > stopDistance)
        {
            chasePlayer();

            if (attackCoroutine != null)
            {
                StopCoroutine(attackCoroutine);
                attackCoroutine = null;
            }
        }
            
        else
        {
            stopChasePlayer();

            if (attackCoroutine == null)
            {
                attackCoroutine = StartCoroutine(attack());
            }
        }
     
          
    }
    void chasePlayer()
    {
        if (transform.position.x < target.transform.position.x)
        transform.localScale = new Vector3(-1, transform.localScale.y, transform.localScale.z);
        else
            transform.localScale = new Vector3(1, transform.localScale.y, transform.localScale.z);
        transform.position = Vector2.MoveTowards(transform.position, target.transform.position, speed * Time.deltaTime);
        animate.SetFloat("Speed", 1);
    }
    void stopChasePlayer()
    {
        animate.SetFloat("Speed", 0);
        /* Do Nothing */
    }

    public IEnumerator attack()
    {
        yield return new WaitForSeconds(2f);

        Debug.Log("Virus attacks");

        animate.SetTrigger("Attack");
        attackCoroutine = null;

    }


}